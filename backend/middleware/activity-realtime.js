const { getIO } = require('../socket');

/**
 * Middleware pour √©mettre des √©v√©nements temps r√©el pour les journaux d'activit√©
 */
const emitActivityLogEvent = async (action, entite, entiteId, utilisateur, details = {}) => {
  try {
    const io = getIO();
    
    // Cr√©er l'√©v√©nement avec les informations n√©cessaires
    const activityEvent = {
      action,
      entite,
      entite_id: entiteId,
      utilisateur: {
        id: utilisateur.id,
        nom: utilisateur.nom,
        prenom: utilisateur.prenom,
        role: utilisateur.role
      },
      date_action: new Date(),
      details
    };

    // √âmettre l'√©v√©nement √† tous les clients connect√©s
    io.emit('newActivity', activityEvent);
    
    // √âmettre sp√©cifiquement pour les journaux d'activit√©
    io.emit('activityLogUpdate', activityEvent);
    
    console.log(`üì° √âv√©nement temps r√©el √©mis: ${action} sur ${entite} ${entiteId}`);
    
  } catch (error) {
    console.warn('‚ö†Ô∏è Erreur lors de l\'√©mission de l\'√©v√©nement temps r√©el:', error.message);
  }
};

module.exports = {
  emitActivityLogEvent
};
