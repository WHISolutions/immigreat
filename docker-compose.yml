version: '3.8'

services:
  # Service Base de données MySQL
  db:
    image: mysql:8.0
    container_name: immigreat_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - immigreat_network
    command: --default-authentication-plugin=mysql_native_password

  # Service Application Node.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: immigreat_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DB_HOST: db
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: 3306
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - "${APP_PORT:-3000}:3000"
    depends_on:
      - db
    volumes:
      - ./backend/uploads:/usr/src/app/uploads
      - app_logs:/usr/src/app/logs
    networks:
      - immigreat_network

  # Service Nginx (optionnel pour la production)
  nginx:
    image: nginx:alpine
    container_name: immigreat_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - immigreat_network

# Volumes pour la persistance des données
volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local

# Réseau pour la communication entre services
networks:
  immigreat_network:
    driver: bridge
